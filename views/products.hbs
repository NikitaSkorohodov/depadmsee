<style>

.accordion:active, .accordion:focus {
    background-color: #F0F0F0;
     border-bottom: none;
}
.acccon{
  border-bottom: 2px solid black; /* Adds a black border at the bottom */
}

.accordion {
    cursor: pointer;
    padding: 10px;
    width: 250px;
    border: none;
    text-align: left;
    outline: none;
    font-size: 18px;
    transition: 0.4s;
    background-color: #F0F0F0;
}


        .panel {
          width: 250px;
            padding: 0 10px;
            display: none;
            overflow: hidden;
            background-color: #F0F0F0;
             
        }

  .row {
    padding: 20px;
}
  .card {
             /* Sets the card height */
    width: 400px;          /* Sets the card width */
    height: 780px;
    display: flex;         /* Enables Flexbox for content alignment */
    flex-direction: column; /* Aligns content vertically */
    justify-content: space-between; /* Spaces content evenly */
    overflow: hidden;      /* Ensures content stays within the bounds */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Optional: Adds shadow for visual appeal */
    border-radius: 5px;    /* Optional: Adds rounded corners */
}
.card-image img {
    max-width: 100%; /* Ensures responsiveness */
    height: 70px; /* Maintains aspect ratio */
    object-fit: cover; /* Ensures the image fits nicely */
    padding: 20px;
}
  @media (max-width: 768px) {
    .content {
      flex-direction: column;
    }
    .card-image img {
    max-width: 100%; /* Ensures responsiveness */
    height: 50px; /* Maintains aspect ratio */
    object-fit: cover; /* Ensures the image fits nicely */
    padding: 10px;
}
 .row {
    padding: 5px;
}
.card {
    width: 350px;
}
  }
</style>
<!-- Filter Form -->
<div class="content" style="display: flex;  gap: 20px; background-color: #F0F0F0;">
<div>
<form action="/products" method="get" class="filter-form" style="padding: 20px; padding-top: 300px; background-color: #F0F0F0; width: 300px;">
 <div class="acccon">
 <button class="accordion">Price</button>
    <div class="panel">
        <div style="display: flex;  gap: 20px;">
  <div style="width: 100px;">
    <label for="priceMin">Минимальная цена</label>
    <input type="number" id="priceMin" name="priceMin" step="0.01" placeholder="Минимальная цена">
  </div>
  <div style="width: 100px;">
    <label for="priceMax">Максимальная цена</label>
    <input type="number" id="priceMax" name="priceMax" step="0.01" placeholder="Максимальная цена">
  </div>
  </div>
    </div>
</div>
<div class="acccon">
    <button class="accordion">Category</button>
    <div class="panel">
        <div style="width: 250px;">
    <input type="text" id="category" name="category" placeholder="Введите категорию">
    <ul>
      {{#each categorys}}
        <li>
          <button class="butsel" type="button" onclick="changeCategorys('{{this}}')">{{this}}</button>
        </li>
      {{/each}}
    </ul>
  </div>
    </div>
    </div>
     <div class="acccon">
    <button class="accordion">GPU</button>
    <div class="panel">
        <div style="width: 250px;">
    <input type="text" id="gpu" name="gpu" placeholder="Введите GPU">
    <ul>
      {{#each gpus}}
        <li>
          <button class="butsel" type="button" onclick="changeGpu('{{this}}')">{{this}}</button>
        </li>
      {{/each}}
    </ul>
  </div>
    </div>
    </div>
    <div class="acccon">
    <button class="accordion">CPU</button>
    <div class="panel">
         <div style="width: 250px;">
    <input type="text" id="cpu" name="cpu" placeholder="Введите CPU">
     <ul>
      {{#each cpus}}
        <li>
          <button class="butsel" type="button" onclick="changeCpu('{{this}}')">{{this}}</button>
        </li>
      {{/each}}
    </ul>
  </div>
    </div>
    </div>
    <div class="acccon">
    <button class="accordion">RUM</button>
    <div class="panel">
         <div style="width: 250px;">
    <label for="rum">RUM</label>
    <input type="text" id="rum" name="rum" placeholder="Введите rum">
     <ul>
      {{#each rums}}
        <li>
          <button class="butsel" type="button" onclick="changeRum('{{this}}')">{{this}}</button>
        </li>
      {{/each}}
    </ul>
  </div>
    </div>
    </div>
    <div class="acccon">
    <button class="accordion">SSD</button>
    <div class="panel">
          <div style="width: 250px;">
    <label for="ssd">SSD</label>
    <input type="text" id="ssd" name="ssd" placeholder="Введите ssd">
     <ul>
      {{#each ssds}}
        <li>
          <button class="butsel" type="button" onclick="changeSsd('{{this}}')">{{this}}</button>
        </li>
      {{/each}}
    </ul>
  </div>
    </div>
</div>
    <script>
     document.querySelectorAll('.accordion').forEach(button => {
    button.addEventListener('click', function(event) {
        event.preventDefault(); // Останавливает обновление страницы
        this.classList.toggle('active');
        let panel = this.nextElementSibling;
        panel.style.display = panel.style.display === "block" ? "none" : "block";
    });
});

    </script>
  
  
  <button type="submit" class="btn btn-primary">Применить фильтры</button>
</form>
</div>
<script>
  // Function to update the GPU value in the form
  function changeGpu(gpuValue) {
    // Update the GPU input field with the selected GPU value
    document.getElementById('gpu').value = gpuValue;

    // Optionally, change the form's action URL dynamically based on the selected GPU value
    // For example: /courses/search?gpu={selectedGpu}
    const form = document.querySelector('.filter-form');
    const currentUrl = new URL(form.action);
    currentUrl.searchParams.set('gpu', gpuValue); // Set GPU as a query parameter
    form.action = currentUrl.toString(); // Update the form's action URL
  }
    function changeSsd(ssdValue) {
    // Update the GPU input field with the selected GPU value
    document.getElementById('ssd').value = ssdValue;

    // Optionally, change the form's action URL dynamically based on the selected GPU value
    // For example: /courses/search?gpu={selectedGpu}
    const form = document.querySelector('.filter-form');
    const currentUrl = new URL(form.action);
    currentUrl.searchParams.set('ssd', ssdValue); // Set GPU as a query parameter
    form.action = currentUrl.toString(); // Update the form's action URL
  }
    function changeRum(rumValue) {
    // Update the GPU input field with the selected GPU value
    document.getElementById('rum').value = rumValue;

    // Optionally, change the form's action URL dynamically based on the selected GPU value
    // For example: /courses/search?gpu={selectedGpu}
    const form = document.querySelector('.filter-form');
    const currentUrl = new URL(form.action);
    currentUrl.searchParams.set('rum', rumValue); // Set GPU as a query parameter
    form.action = currentUrl.toString(); // Update the form's action URL
  }
   function changeCpu(cpuValue) {
    // Update the GPU input field with the selected GPU value
    document.getElementById('cpu').value = cpuValue;

    // Optionally, change the form's action URL dynamically based on the selected GPU value
    // For example: /courses/search?gpu={selectedGpu}
    const form = document.querySelector('.filter-form');
    const currentUrl = new URL(form.action);
    currentUrl.searchParams.set('cpu', cpuValue); // Set GPU as a query parameter
    form.action = currentUrl.toString(); // Update the form's action URL
  }
  function changeCategorys(categoryValue) {
    // Update the GPU input field with the selected GPU value
    document.getElementById('category').value = categoryValue;

    // Optionally, change the form's action URL dynamically based on the selected GPU value
    // For example: /courses/search?gpu={selectedGpu}
    const form = document.querySelector('.filter-form');
    const currentUrl = new URL(form.action);
    currentUrl.searchParams.set('category', categoryValue); // Set GPU as a query parameter
    form.action = currentUrl.toString(); // Update the form's action URL
  }
</script>
<div>

<!-- Display Products -->
{{#if products.length}}
  <div class="row" style=" padding-top: 300px; background-color: #F0F0F0; display: flex;
      flex-wrap: wrap;
      gap: 10px;">
    {{#each products}}
      <div class="prod">
        <div class="card">
          <div class="card-image">
            <img src="{{img}}" alt="{{title}}">
          </div>
          <div class="card-content">
            <span class="card-title">{{title}}</span>
            <p class="price">{{price}}</p>
            <div style="display: flex;  gap: 20px; ">
            <p>gpu {{gpu}}</p>
            <p>cpu {{cpu}}</p>
            </div>
             <div style="display: flex;  gap: 20px; ">
            <p>rum {{rum}}</p>
            <p>ssd {{ssd}}</p>
            </div>
          </div>
          <div class="card-action actions">
            <a href="/products/{{id}}" target="_blank">{{__ 'more details'}}</a>
            <form action="/card/add" method="POST" style="display:inline;">
              <input type="hidden" name="id" value="{{id}}">
              <button type="submit" class="btn btn-primary">{{__ 'Buy'}}</button>
            </form>
            <form action="/favorites/add" method="POST">
              <input type="hidden" name="courseId" value="{{id}}">
              <button type="submit" class="btn btn-secondary">like</button>
            </form>
          </div>
        </div>
      </div>
    {{/each}}
  </div>
{{else}}
  <p>{{__ 'No products found matching your filters'}}</p>
{{/if}}
</div>
</div>